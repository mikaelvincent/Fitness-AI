openapi: 3.0.3
info:
  title: 'Fitness AI'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/login:
    post:
      summary: 'Authenticate the user and issue a token.'
      operationId: authenticateTheUserAndIssueAToken
      description: 'Validates user credentials and issues a new API token. Requires a valid two-factor authentication code if enabled.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Login successful. You are now authenticated.'
                  data:
                    token: example-token
                properties:
                  message:
                    type: string
                    example: 'Login successful. You are now authenticated.'
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: example-token
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid email or password provided.'
                properties:
                  message:
                    type: string
                    example: 'Invalid email or password provided.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The two-factor authentication code is invalid.'
                properties:
                  message:
                    type: string
                    example: 'The two-factor authentication code is invalid.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The user''s email address.'
                  example: user@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The user''s password.'
                  example: ')B#Qz?{T8"<Tx'
                  nullable: false
                two_factor_code:
                  type: string
                  description: 'The two-factor authentication code if enabled.'
                  example: voluptatum
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Logout the authenticated user.'
      operationId: logoutTheAuthenticatedUser
      description: 'Revokes the user''s current authentication token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have been successfully logged out.'
                properties:
                  message:
                    type: string
                    example: 'You have been successfully logged out.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - Authentication
  /api/token/refresh:
    post:
      summary: 'Refresh the authentication token.'
      operationId: refreshTheAuthenticationToken
      description: 'Revokes the current token and issues a new one.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your authentication token has been refreshed successfully.'
                  data:
                    token: new-example-token
                properties:
                  message:
                    type: string
                    example: 'Your authentication token has been refreshed successfully.'
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: new-example-token
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - Authentication
  /api/password/forgot:
    post:
      summary: 'Send a password reset link to the user''s email.'
      operationId: sendAPasswordResetLinkToTheUsersEmail
      description: 'Initiates the password reset process by emailing a reset link to the user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your request has been received. If your email is registered, you will receive a password reset link shortly.'
                properties:
                  message:
                    type: string
                    example: 'Your request has been received. If your email is registered, you will receive a password reset link shortly.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - 'Password Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The user''s email address.'
                  example: freddy.balistreri@example.org
                  nullable: false
              required:
                - email
      security: []
  /api/password/reset:
    post:
      summary: 'Reset the user''s password.'
      operationId: resetTheUsersPassword
      description: 'Validates the token and resets the user''s password.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your password has been successfully reset.'
                properties:
                  message:
                    type: string
                    example: 'Your password has been successfully reset.'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The provided token or email is invalid or has expired.'
                properties:
                  message:
                    type: string
                    example: 'The provided token or email is invalid or has expired.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - 'Password Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The password reset token.'
                  example: voluptatum
                  nullable: false
                email:
                  type: string
                  description: 'The user''s email address.'
                  example: freddy.balistreri@example.org
                  nullable: false
                password:
                  type: string
                  description: 'The new password.'
                  example: ')B#Qz?{T8"<Tx'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Confirmation of the new password.'
                  example: voluptatum
                  nullable: false
              required:
                - token
                - email
                - password
                - password_confirmation
      security: []
  /api/password/change:
    post:
      summary: 'Change the authenticated user''s password.'
      operationId: changeTheAuthenticatedUsersPassword
      description: 'Updates the user''s password after validating the current password.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your password has been updated successfully.'
                properties:
                  message:
                    type: string
                    example: 'Your password has been updated successfully.'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The current password you provided does not match our records.'
                properties:
                  message:
                    type: string
                    example: 'The current password you provided does not match our records.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - 'Password Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                  description: 'The user''s current password.'
                  example: voluptatum
                  nullable: false
                password:
                  type: string
                  description: 'The new password.'
                  example: ')B#Qz?{T8"<Tx'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Confirmation of the new password.'
                  example: voluptatum
                  nullable: false
              required:
                - current_password
                - password
                - password_confirmation
  /api/registration/initiate:
    post:
      summary: 'Initiate the registration process.'
      operationId: initiateTheRegistrationProcess
      description: 'Generates a registration token and sends a verification email.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Registration process has been initiated. Please check your email for further instructions.'
                properties:
                  message:
                    type: string
                    example: 'Registration process has been initiated. Please check your email for further instructions.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The user''s email address.'
                  example: freddy.balistreri@example.org
                  nullable: false
              required:
                - email
      security: []
  /api/registration/resend:
    post:
      summary: 'Resend the registration verification email.'
      operationId: resendTheRegistrationVerificationEmail
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'A new verification email has been sent to your address.'
                properties:
                  message:
                    type: string
                    example: 'A new verification email has been sent to your address.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The user''s email address.'
                  example: freddy.balistreri@example.org
                  nullable: false
              required:
                - email
      security: []
  /api/registration/validate-token:
    post:
      summary: 'Validate the registration token.'
      operationId: validateTheRegistrationToken
      description: 'Checks if the provided token is valid or has expired.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The registration token is valid.'
                  data:
                    expires_in: 3600
                properties:
                  message:
                    type: string
                    example: 'The registration token is valid.'
                  data:
                    type: object
                    properties:
                      expires_in:
                        type: integer
                        example: 3600
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The registration token is invalid or has expired.'
                properties:
                  message:
                    type: string
                    example: 'The registration token is invalid or has expired.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The registration token.'
                  example: voluptatum
                  nullable: false
              required:
                - token
      security: []
  /api/registration/complete:
    post:
      summary: 'Complete the registration by creating a new user.'
      operationId: completeTheRegistrationByCreatingANewUser
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Registration completed successfully. Welcome aboard!'
                  data:
                    token: example-token
                properties:
                  message:
                    type: string
                    example: 'Registration completed successfully. Welcome aboard!'
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: example-token
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The registration token provided is invalid or has expired.'
                properties:
                  message:
                    type: string
                    example: 'The registration token provided is invalid or has expired.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: 'The registration token.'
                  example: voluptatum
                  nullable: false
                name:
                  type: string
                  description: 'The user''s full name.'
                  example: voluptatum
                  nullable: false
                password:
                  type: string
                  description: 'The user''s password.'
                  example: ')B#Qz?{T8"<Tx'
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Confirmation of the password.'
                  example: voluptatum
                  nullable: false
              required:
                - token
                - name
                - password
                - password_confirmation
      security: []
  /api/two-factor/enable:
    post:
      summary: 'Enable two-factor authentication.'
      operationId: enableTwoFactorAuthentication
      description: 'Generates a secret key and QR code URL.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Two-factor authentication enabled.'
                  data:
                    qr_code_url: 'otpauth://totp/AppName:user@example.com?secret=ABCDEF...'
                    recovery_codes:
                      - code1
                      - code2
                      - ...
                properties:
                  message:
                    type: string
                    example: 'Two-factor authentication enabled.'
                  data:
                    type: object
                    properties:
                      qr_code_url:
                        type: string
                        example: 'otpauth://totp/AppName:user@example.com?secret=ABCDEF...'
                      recovery_codes:
                        type: array
                        example:
                          - code1
                          - code2
                          - ...
                        items:
                          type: string
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - 'Two-Factor Authentication'
  /api/two-factor/confirm:
    post:
      summary: 'Confirm two-factor authentication setup.'
      operationId: confirmTwoFactorAuthenticationSetup
      description: 'Validates the code from the authenticator app.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Two-factor authentication confirmed.'
                properties:
                  message:
                    type: string
                    example: 'Two-factor authentication confirmed.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - 'Two-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: 'The verification code from the authenticator app.'
                  example: voluptatum
                  nullable: false
              required:
                - code
  /api/two-factor/disable:
    post:
      summary: 'Disable two-factor authentication.'
      operationId: disableTwoFactorAuthentication
      description: 'Removes two-factor authentication settings from the user''s account.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Two-factor authentication disabled.'
                properties:
                  message:
                    type: string
                    example: 'Two-factor authentication disabled.'
        429:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after: 60
                properties:
                  message:
                    type: string
                    example: 'You have exceeded the maximum number of attempts. Please try again in 60 seconds.'
                  retry_after:
                    type: integer
                    example: 60
      tags:
        - 'Two-Factor Authentication'
tags:
  -
    name: Authentication
    description: ''
  -
    name: 'Password Management'
    description: ''
  -
    name: Registration
    description: ''
  -
    name: 'Two-Factor Authentication'
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'Tokens are issued upon successful login via the <code>/api/login</code> endpoint.'
security:
  -
    default: []
